#!/bin/sh

# MZNTLogger Daemon
MZ_PATH="/mnt/MZNTCpp.elf"
MZ_OPTS=""

HTTP_HOST=gnssfast.colorado.edu
UPLOAD_PORT=1337
MQTT_HOST=gnssfast.colorado.edu
MQTT_PORT=5554

MZ_NAME="MZNTLogger"
PIDFILE=/var/run/$MZ_NAME.pid

# defaults
TEST_FOLDER=/mnt/MZ0

case "$1" in
start)
    # insert kernel module
	if [ -e /lib/modules/4.9.0-xilinx-v2017.4/extra/usrdma.ko ]
	then
	  insmod /lib/modules/4.9.0-xilinx-v2017.4/extra/usrdma.ko udmabuf0=102400000
	else
	  echo "------------------No udmabuf module found-------------------------------"
	fi
    
	echo "MZNT Startup: Checking Drive."
	if [ -e /dev/sda1 ]
	then
	    echo "MZNTLogger: Mounting drive."
	    mount /dev/sda1 /mnt

        # attempt to source the config file.
        . /mnt/config.txt

        # Echo the relevant variables.
        echo $MZ_NAME
        echo $TEST_NAME

        MZ_OPTS+="-o /mnt/$MZ_NAME.$TEST_NAME.IF"
	else
	  echo "---------------MZNTLogger ERROR: No drive mounted.--------------"
	fi

	echo "MZNT Startup: Checking network."

	#try to ping the server
	ping -c 1 www.google.com > /dev/NULL
	if [ "$?" -eq 0 ]
	then
        echo "MZNT Startup: Network good."
	else
		echo "MZNT Startup: Network not found. Disabling network features."
		# turn off write to network
		# set options for no HTTP upload and MQTT
	fi

	# create the log folder
	if [ -e /log/ ]
	then
	    echo "MZNTLogger: Log folder exists."
	else
	    mkdir /log/
	    echo "MZNTLogger: Log folder created."
    fi

	# start the daemon
	PID=`$MZ_PATH $MZ_OPTS > /mnt/logfile.txt 2>&1 & echo $!`
	#PID=`$MZ_PATH $MZ_OPTS 2>&1 & echo $!`
	if [ -z $PID ]
    then
	    printf "%s\n" "FAIL"
    else
	    echo $PID > $PIDFILE
	    echo "+++++++++++++++++++++++++++MZNT OK++++++++++++++++++++++++++++\n"
    fi
;;
status)
        printf "%-50s" "Checking $MZ_NAME..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
;;
stop)
        printf "%-50s" "Stopping $MZ_NAME"
            PID=`cat $PIDFILE`
            cd $DAEMON_PATH
        if [ -f $PIDFILE ]; then
            kill -HUP $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s\n" "pidfile not found"
        fi

;;

restart)
  	$0 stop
  	$0 start
;;

*)
	echo "Usage: $0 {status|start|stop|restart}"
	exit 1
esac
